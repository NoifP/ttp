10/30/2019 04:10:19.506 [TTP INFO] 63; ttp.lazy_import_functions: starting functions lazy import
10/30/2019 04:10:19.523 [TTP INFO] 78; ttp.lazy_import_functions: files loaded, starting ast parsing
10/30/2019 04:10:19.544 [TTP INFO] 104; ttp.lazy_import_functions: finished functions lazy import
10/30/2019 04:10:19.546 [TTP DEBUG] 228; ttp.add_template - loading template
10/30/2019 04:10:19.546 [TTP INFO] 52; calling CachedModule: module 'utils.loaders', function 'load_files'
10/30/2019 04:10:19.549 [TTP INFO] 52; calling CachedModule: module 'utils.get_attributes', function 'get_attributes'
10/30/2019 04:10:19.552 [TTP INFO] 52; calling CachedModule: module 'patterns.get_pattern', function 'get'
10/30/2019 04:10:19.559 [TTP ERROR] 716; template.update_groups_with_outputs: group 'bla' - output 'not exists' not found.
10/30/2019 04:10:19.562 [TTP DEBUG] 606; Template Object <ttp.ttp._template_class object at 0x02E11B90>, Template name 'None' content:
{   'PATHCHAR': '.',
    'base_path': '',
    'groups': [<ttp.ttp._group_class object at 0x0306A4B0>],
    'groups_outputs': [],
    'inputs': OrderedDict([   (   'in1',
                                  <ttp.ttp._input_class object at 0x0306A650>)]),
    'lookups': {},
    'macro': {},
    'macro_text': [],
    'name': None,
    'outputs': [],
    'results': [],
    'results_method': 'per_input',
    'templates': [],
    'ttp_vars': {},
    'vars': {'_var_functions_': {}, '_vars_to_results_': {}}}
10/30/2019 04:10:19.563 [TTP DEBUG] 1008; Template object <ttp.ttp._template_class object at 0x02E11B90>, Template name 'None', Input name 'in1' content:
{   'attributes': {   'extensions': [],
                      'filters': [],
                      'load': 'text',
                      'preference': 'merge',
                      'urls': []},
    'data': [   (   'text_data',
                    '\n'
                    'user.name@host-site-sw1> show configuration interfaces | '
                    'display set \n'
                    'set interfaces vlan unit 17 description "som if '
                    'descript"\n'
                    'set interfaces vlan unit 17 family inet address '
                    '20.17.1.253/23 vrrp-group 25 virtual-address 20.17.1.254\n'
                    'set interfaces vlan unit 17 family inet address '
                    '20.17.1.252/23\n')],
    'functions': [],
    'group_inputs': [],
    'groups_indexes': [0],
    'input_groups': [0],
    'name': 'in1',
    'template_obj': <ttp.ttp._template_class object at 0x02E11B90>}
10/30/2019 04:10:19.565 [TTP DEBUG] 1285; Group object <ttp.ttp._group_class object at 0x0306A4B0>, Group name 'bla' content:
{   'children': [],
    'default': '_Not_Given_',
    'defaults': {'group': 'group-0', 'hostname': 'hostname'},
    'end_re': [],
    'funcs': [{'args': ['bla'], 'name': 'func_not_exists'}],
    'grp_index': 0,
    'has_start_re_default': False,
    'inputs': [],
    'method': 'group',
    'name': 'bla',
    'outputs': [],
    'path': ['bla'],
    'pathchar': '.',
    're': [   {   'ACTION': 'add',
                  'GROUP': <ttp.ttp._group_class object at 0x0306A4B0>,
                  'IS_LINE': False,
                  'REGEX': re.compile('\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ +(?P<unit>(?:\\S+))\\ +description\\ +"(?P<description>(?:\\S+|(\\S+ {1})+?\\S+))"[\t ]*(?=\\n)'),
                  'VARIABLES': {   'description': <ttp.ttp._variable_class object at 0x0308E630>,
                                   'interface': <ttp.ttp._variable_class object at 0x0308EFF0>,
                                   'unit': <ttp.ttp._variable_class object at 0x0308E5F0>}}],
    'runs': {},
    'start_re': [   {   'ACTION': 'start',
                        'GROUP': <ttp.ttp._group_class object at 0x0306A4B0>,
                        'IS_LINE': False,
                        'REGEX': re.compile('\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ +(?P<unit>(?:\\S+))\\ +family\\ +inet\\ +address\\ +(?P<ip>(?:\\S+))\\ +vrrp\\-group\\ +(?P<vrrp_id>(?:\\S+))\\ +virtual\\-address\\ +(?P<vrr),
                        'VARIABLES': {   'interface': <ttp.ttp._variable_class object at 0x0306A6D0>,
                                         'ip': <ttp.ttp._variable_class object at 0x0308E250>,
                                         'unit': <ttp.ttp._variable_class object at 0x0306A850>,
                                         'vrrp_id': <ttp.ttp._variable_class object at 0x0308ED10>,
                                         'vrrp_vip': <ttp.ttp._variable_class object at 0x0308EF70>}}],
    'top': True,
    'vars': {'_var_functions_': {}, '_vars_to_results_': {}}}
10/30/2019 04:10:19.567 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0306A6D0>, Variable name 'interface' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} family inet '
            'address {{ ip | to_ip }} vrrp-group {{ vrrp_id }} virtual-address '
            '{{ vrrp_vip }}',
    'SAVEACTION': 'add',
    'attributes': [],
    'functions': [],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+\\{\\{\\ +unit\\ +\\}\\}\\ +family\\ +inet\\ +address\\ '
             '+\\{\\{\\ +ip\\ +\\|\\ +to_ip\\ +\\}\\}\\ +vrrp\\-group\\ '
             '+\\{\\{\\ +vrrp_id\\ +\\}\\}\\ +virtual\\-address\\ +\\{\\{\\ '
             '+vrrp_vip\\ +\\}\\}[\t ]*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'interface'},
    'var_name': 'interface',
    'var_res': ['\\S+'],
    'variable': ' interface '}
10/30/2019 04:10:19.569 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0306A850>, Variable name 'unit' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} family inet '
            'address {{ ip | to_ip }} vrrp-group {{ vrrp_id }} virtual-address '
            '{{ vrrp_vip }}',
    'SAVEACTION': 'add',
    'attributes': [],
    'functions': [],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+(?P<unit>(?:\\S+))\\ +family\\ +inet\\ +address\\ +\\{\\{\\ '
             '+ip\\ +\\|\\ +to_ip\\ +\\}\\}\\ +vrrp\\-group\\ +\\{\\{\\ '
             '+vrrp_id\\ +\\}\\}\\ +virtual\\-address\\ +\\{\\{\\ +vrrp_vip\\ '
             '+\\}\\}[\t ]*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'unit'},
    'var_name': 'unit',
    'var_res': ['\\S+'],
    'variable': ' unit '}
10/30/2019 04:10:19.570 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0308E250>, Variable name 'ip' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} family inet '
            'address {{ ip | to_ip }} vrrp-group {{ vrrp_id }} virtual-address '
            '{{ vrrp_vip }}',
    'SAVEACTION': 'add',
    'attributes': [{'args': (), 'kwargs': {}, 'name': 'to_ip'}],
    'functions': [{'args': (), 'kwargs': {}, 'name': 'to_ip'}],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+(?P<unit>(?:\\S+))\\ +family\\ +inet\\ +address\\ '
             '+(?P<ip>(?:\\S+))\\ +vrrp\\-group\\ +\\{\\{\\ +vrrp_id\\ '
             '+\\}\\}\\ +virtual\\-address\\ +\\{\\{\\ +vrrp_vip\\ +\\}\\}[\t '
             ']*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'ip'},
    'var_name': 'ip',
    'var_res': ['\\S+'],
    'variable': ' ip | to_ip '}
10/30/2019 04:10:19.571 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0308ED10>, Variable name 'vrrp_id' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} family inet '
            'address {{ ip | to_ip }} vrrp-group {{ vrrp_id }} virtual-address '
            '{{ vrrp_vip }}',
    'SAVEACTION': 'add',
    'attributes': [],
    'functions': [],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+(?P<unit>(?:\\S+))\\ +family\\ +inet\\ +address\\ '
             '+(?P<ip>(?:\\S+))\\ +vrrp\\-group\\ +(?P<vrrp_id>(?:\\S+))\\ '
             '+virtual\\-address\\ +\\{\\{\\ +vrrp_vip\\ +\\}\\}[\t ]*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'vrrp_id'},
    'var_name': 'vrrp_id',
    'var_res': ['\\S+'],
    'variable': ' vrrp_id '}
10/30/2019 04:10:19.572 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0308EF70>, Variable name 'vrrp_vip' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} family inet '
            'address {{ ip | to_ip }} vrrp-group {{ vrrp_id }} virtual-address '
            '{{ vrrp_vip }}',
    'SAVEACTION': 'add',
    'attributes': [],
    'functions': [],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+(?P<unit>(?:\\S+))\\ +family\\ +inet\\ +address\\ '
             '+(?P<ip>(?:\\S+))\\ +vrrp\\-group\\ +(?P<vrrp_id>(?:\\S+))\\ '
             '+virtual\\-address\\ +(?P<vrrp_vip>(?:\\S+))[\t ]*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'vrrp_vip'},
    'var_name': 'vrrp_vip',
    'var_res': ['\\S+'],
    'variable': ' vrrp_vip '}
10/30/2019 04:10:19.573 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0308EFF0>, Variable name 'interface' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} description "{{ '
            'description | ORPHRASE }}"',
    'SAVEACTION': 'add',
    'attributes': [],
    'functions': [],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+\\{\\{\\ +unit\\ +\\}\\}\\ +description\\ +"\\{\\{\\ '
             '+description\\ +\\|\\ +ORPHRASE\\ +\\}\\}"[\t ]*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'interface'},
    'var_name': 'interface',
    'var_res': ['\\S+'],
    'variable': ' interface '}
10/30/2019 04:10:19.574 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0308E5F0>, Variable name 'unit' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} description "{{ '
            'description | ORPHRASE }}"',
    'SAVEACTION': 'add',
    'attributes': [],
    'functions': [],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+(?P<unit>(?:\\S+))\\ +description\\ +"\\{\\{\\ +description\\ '
             '+\\|\\ +ORPHRASE\\ +\\}\\}"[\t ]*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'unit'},
    'var_name': 'unit',
    'var_res': ['\\S+'],
    'variable': ' unit '}
10/30/2019 04:10:19.575 [TTP DEBUG] 1551; Variable object <ttp.ttp._variable_class object at 0x0308E630>, Variable name 'description' content:
{   'IS_LINE': False,
    'LINE': 'set interfaces {{ interface }} unit {{ unit }} description "{{ '
            'description | ORPHRASE }}"',
    'SAVEACTION': 'add',
    'attributes': [{'args': (), 'kwargs': {}, 'name': 'ORPHRASE'}],
    'functions': [],
    'group': <ttp.ttp._group_class object at 0x0306A4B0>,
    'regex': '\\nset\\ +interfaces\\ +(?P<interface>(?:\\S+))\\ +unit\\ '
             '+(?P<unit>(?:\\S+))\\ +description\\ '
             '+"(?P<description>(?:\\S+|(\\S+ {1})+?\\S+))"[\t ]*(?=\\n)',
    'skip_defaults': ['_end_', '_line_', 'ignore', '_start_'],
    'skip_regex_dict': False,
    'skip_variable_dict': False,
    'var_dict': {'args': (), 'kwargs': {}, 'name': 'description'},
    'var_name': 'description',
    'var_res': ['\\S+|(\\S+ {1})+?\\S+'],
    'variable': ' description | ORPHRASE '}
10/30/2019 04:10:19.576 [TTP INFO] 52; calling CachedModule: module 'formatters.json_formatter', function 'json'
10/30/2019 04:10:19.585 [TTP INFO] 52; calling CachedModule: module 'returners.terminal_returner', function 'terminal'
